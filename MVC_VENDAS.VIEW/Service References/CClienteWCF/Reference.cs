//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_VENDAS.VIEW.CClienteWCF {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/MVC_VENDAS.MODEL")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BairroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CidadeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodigoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnderecoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Bairro {
            get {
                return this.BairroField;
            }
            set {
                if ((object.ReferenceEquals(this.BairroField, value) != true)) {
                    this.BairroField = value;
                    this.RaisePropertyChanged("Bairro");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cidade {
            get {
                return this.CidadeField;
            }
            set {
                if ((object.ReferenceEquals(this.CidadeField, value) != true)) {
                    this.CidadeField = value;
                    this.RaisePropertyChanged("Cidade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Codigo {
            get {
                return this.CodigoField;
            }
            set {
                if ((this.CodigoField.Equals(value) != true)) {
                    this.CodigoField = value;
                    this.RaisePropertyChanged("Codigo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endereco {
            get {
                return this.EnderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnderecoField, value) != true)) {
                    this.EnderecoField = value;
                    this.RaisePropertyChanged("Endereco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telefone {
            get {
                return this.TelefoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefoneField, value) != true)) {
                    this.TelefoneField = value;
                    this.RaisePropertyChanged("Telefone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CClienteWCF.ICCliente")]
    public interface ICCliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/ListaClientes", ReplyAction="http://tempuri.org/ICCliente/ListaClientesResponse")]
        MVC_VENDAS.VIEW.CClienteWCF.Cliente[] ListaClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/ListaClientes", ReplyAction="http://tempuri.org/ICCliente/ListaClientesResponse")]
        System.Threading.Tasks.Task<MVC_VENDAS.VIEW.CClienteWCF.Cliente[]> ListaClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/AlterarCliente", ReplyAction="http://tempuri.org/ICCliente/AlterarClienteResponse")]
        void AlterarCliente(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/AlterarCliente", ReplyAction="http://tempuri.org/ICCliente/AlterarClienteResponse")]
        System.Threading.Tasks.Task AlterarClienteAsync(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/SelecionarCliente", ReplyAction="http://tempuri.org/ICCliente/SelecionarClienteResponse")]
        MVC_VENDAS.VIEW.CClienteWCF.Cliente SelecionarCliente(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/SelecionarCliente", ReplyAction="http://tempuri.org/ICCliente/SelecionarClienteResponse")]
        System.Threading.Tasks.Task<MVC_VENDAS.VIEW.CClienteWCF.Cliente> SelecionarClienteAsync(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/ExcluirCliente", ReplyAction="http://tempuri.org/ICCliente/ExcluirClienteResponse")]
        void ExcluirCliente(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/ExcluirCliente", ReplyAction="http://tempuri.org/ICCliente/ExcluirClienteResponse")]
        System.Threading.Tasks.Task ExcluirClienteAsync(int Codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/IncluirCliente", ReplyAction="http://tempuri.org/ICCliente/IncluirClienteResponse")]
        void IncluirCliente(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICCliente/IncluirCliente", ReplyAction="http://tempuri.org/ICCliente/IncluirClienteResponse")]
        System.Threading.Tasks.Task IncluirClienteAsync(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICClienteChannel : MVC_VENDAS.VIEW.CClienteWCF.ICCliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CClienteClient : System.ServiceModel.ClientBase<MVC_VENDAS.VIEW.CClienteWCF.ICCliente>, MVC_VENDAS.VIEW.CClienteWCF.ICCliente {
        
        public CClienteClient() {
        }
        
        public CClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC_VENDAS.VIEW.CClienteWCF.Cliente[] ListaClientes() {
            return base.Channel.ListaClientes();
        }
        
        public System.Threading.Tasks.Task<MVC_VENDAS.VIEW.CClienteWCF.Cliente[]> ListaClientesAsync() {
            return base.Channel.ListaClientesAsync();
        }
        
        public void AlterarCliente(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente) {
            base.Channel.AlterarCliente(oCliente);
        }
        
        public System.Threading.Tasks.Task AlterarClienteAsync(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente) {
            return base.Channel.AlterarClienteAsync(oCliente);
        }
        
        public MVC_VENDAS.VIEW.CClienteWCF.Cliente SelecionarCliente(int Codigo) {
            return base.Channel.SelecionarCliente(Codigo);
        }
        
        public System.Threading.Tasks.Task<MVC_VENDAS.VIEW.CClienteWCF.Cliente> SelecionarClienteAsync(int Codigo) {
            return base.Channel.SelecionarClienteAsync(Codigo);
        }
        
        public void ExcluirCliente(int Codigo) {
            base.Channel.ExcluirCliente(Codigo);
        }
        
        public System.Threading.Tasks.Task ExcluirClienteAsync(int Codigo) {
            return base.Channel.ExcluirClienteAsync(Codigo);
        }
        
        public void IncluirCliente(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente) {
            base.Channel.IncluirCliente(oCliente);
        }
        
        public System.Threading.Tasks.Task IncluirClienteAsync(MVC_VENDAS.VIEW.CClienteWCF.Cliente oCliente) {
            return base.Channel.IncluirClienteAsync(oCliente);
        }
    }
}
